





Compile the contract (on the host machine):

docker run --rm -v "$(pwd)":/code \
  --mount type=volume,source="$(basename "$(pwd)")_cache",target=/code/target \
  --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry \
  cosmwasm/rust-optimizer:0.13.0



Deploy contract (from inside of the docker if on M2):

RES=$(cored tx wasm store artifacts/cw_nameservice.wasm --from wallet --gas auto --gas-adjustment 1.3 -y -b block --output json $COREUM_NODE_ARGS $COREUM_CHAIN_ID_ARGS)
echo $RES 
CODE_ID=$(echo $RES | jq -r '.logs[0].events[-1].attributes[-1].value')
echo $CODE_ID

Instantiate a contract & fetch the new contract address:

INIT="{\"purchase_price\":{\"amount\":\"100\",\"denom\":\"$COREUM_DENOM\"},\"transfer_price\":{\"amount\":\"999\",\"denom\":\"$COREUM_DENOM\"}}"
cored tx wasm instantiate $CODE_ID "$INIT" --from wallet --label "name service" -b block -y --no-admin $COREUM_NODE_ARGS $COREUM_CHAIN_ID_ARGS
cored q wasm list-contract-by-code $CODE_ID --output json $COREUM_NODE_ARGS $COREUM_CHAIN_ID_ARGS
CONTRACT_ADDRESS=$(cored q wasm list-contract-by-code $CODE_ID --output json $COREUM_NODE_ARGS $COREUM_CHAIN_ID_ARGS | jq -r '.contracts[-1]')
echo $CONTRACT_ADDRESS


Register a new mapping (Coreum->DID):

REGISTER='{"register":{"did":"extremely_decentralized_igor_DID", "username":"igor", "bio": "will hack for food"}}'
cored tx wasm execute $CONTRACT_ADDRESS "$REGISTER" --amount 100$COREUM_DENOM --from wallet -b block -y $COREUM_NODE_ARGS $COREUM_CHAIN_ID_ARGS

REGISTER='{"register":{"did":"another_extremely_decentralized_DID", "username":"alice", "bio": "will not hack for food"}}'
cored tx wasm execute $CONTRACT_ADDRESS "$REGISTER" --amount 100$COREUM_DENOM --from wallet -b block -y $COREUM_NODE_ARGS $COREUM_CHAIN_ID_ARGS





Query the user info to see the mappings:

NAME_QUERY='{"resolve_user_info": {"address": "testcore1uhhe282a2p9fqvelsaa09l3zvgupsgngfwpqps"}}'
cored q wasm contract-state smart $CONTRACT_ADDRESS "$NAME_QUERY" --output json $COREUM_NODE_ARGS $COREUM_CHAIN_ID_ARGS

NAME_QUERY='{"resolve_user_info": {"address": "testcore1399zr8frstagy2u5vl2w4uv0pdzxzh3vejtzuk"}}'
cored q wasm contract-state smart $CONTRACT_ADDRESS "$NAME_QUERY" --output json $COREUM_NODE_ARGS $COREUM_CHAIN_ID_ARGS


Issue couple of event attendance credentials:

ISSUE='{"issue_credential":{"credential": {"Event": { "data": {"owner":"testcore1399zr8frstagy2u5vl2w4uv0pdzxzh3vejtzuk", "event_name":"EBC Hackathon", "organizer_did":"org_did_real","year":2023}}}}}'
cored tx wasm execute $CONTRACT_ADDRESS "$ISSUE" --amount 100$COREUM_DENOM --from wallet -b block -y $COREUM_NODE_ARGS $COREUM_CHAIN_ID_ARGS

ISSUE='{"issue_credential":{"credential": {"Event": { "data": {"owner":"testcore1399zr8frstagy2u5vl2w4uv0pdzxzh3vejtzuk", "event_name":"EBC Afterparty", "organizer_did":"org_did_real","year":2024}}}}}'
cored tx wasm execute $CONTRACT_ADDRESS "$ISSUE" --amount 100$COREUM_DENOM --from wallet -b block -y $COREUM_NODE_ARGS $COREUM_CHAIN_ID_ARGS

ISSUE='{"issue_credential":{"credential": {"Degree": { "data": {"owner":"testcore1399zr8frstagy2u5vl2w4uv0pdzxzh3vejtzuk", "institution_name":"MIT", "institution_did":"MIT_did_real","year":2021}}}}}'
cored tx wasm execute $CONTRACT_ADDRESS "$ISSUE" --amount 100$COREUM_DENOM --from wallet -b block -y $COREUM_NODE_ARGS $COREUM_CHAIN_ID_ARGS


Query event list attendance credential:

NAME_QUERY='{"list_credentials": {"address": "testcore1399zr8frstagy2u5vl2w4uv0pdzxzh3vejtzuk"}}'
cored q wasm contract-state smart $CONTRACT_ADDRESS "$NAME_QUERY" --output json $COREUM_NODE_ARGS $COREUM_CHAIN_ID_ARGS
